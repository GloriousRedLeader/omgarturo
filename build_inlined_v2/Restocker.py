# Razor Enhanced Scripts for Ultima Online by
#   GRL  
#   https://github.com/GloriousRedLeader/omgarturo
#   2025-09-17
# Use at your own risk. 
#
# This file was auto-generated by the import inliner.
# Original dependencies from fm_core have been inlined below.

# ===============================================
# External Imports
# ===============================================
import sys

# ===============================================
# Inlined Dependencies (topologically sorted)
# ===============================================

# AMBER (from core_items.py)
AMBER = 0x0F25

# AMETHYST (from core_items.py)
AMETHYST = 0x0F16

# BATWING (from core_items.py)
BATWING = 0x0F78

# BLACKPEARL (from core_items.py)
BLACKPEARL = 0x0F7A

# BLOODMOSS (from core_items.py)
BLOODMOSS = 0x0F7B

# BOARD_STATIC_ID (from core_items.py)
BOARD_STATIC_ID = 0x1BD7

# CITRINE (from core_items.py)
CITRINE = 0x0F15

# CLOTH_STATIC_ID (from core_items.py)
CLOTH_STATIC_ID = 0x1766

# DAEMONBLOOD (from core_items.py)
DAEMONBLOOD = 0x0F7D

# DIAMOND (from core_items.py)
DIAMOND = 0x0F26

# EMERALD (from core_items.py)
EMERALD = 0x0F10

# FIRE_RUBY (from core_items.py)
FIRE_RUBY = 0x3197

# GARLIC (from core_items.py)
GARLIC = 0x0F84

# GINSENG (from core_items.py)
GINSENG = 0x0F85

# GRAVEDUST (from core_items.py)
GRAVEDUST = 0x0F8F

# INGOT_STATIC_ID (from core_items.py)
INGOT_STATIC_ID = 0x1BF2

# LEATHER_STATIC_ID (from core_items.py)
LEATHER_STATIC_ID = 0x1081

# MANDRAKEROOT (from core_items.py)
MANDRAKEROOT = 0x0F86

# NIGHTSHADE (from core_items.py)
NIGHTSHADE = 0x0F88

# NOXCRYSTAL (from core_items.py)
NOXCRYSTAL = 0x0F8E

# PERFECT_EMERALD (from core_items.py)
PERFECT_EMERALD = 0x3194

# PIGIRON (from core_items.py)
PIGIRON = 0x0F8A

# RESOURCE_HUE_AGAPITE (from core_items.py)
RESOURCE_HUE_AGAPITE = 0x0979

# RESOURCE_HUE_ASH (from core_items.py)
RESOURCE_HUE_ASH = 0x04a7

# RESOURCE_HUE_BARBED (from core_items.py)
RESOURCE_HUE_BARBED = 0x0851

# RESOURCE_HUE_BLOODWOOD (from core_items.py)
RESOURCE_HUE_BLOODWOOD = 0x04aa

# RESOURCE_HUE_BRONZE (from core_items.py)
RESOURCE_HUE_BRONZE = 0x0972

# RESOURCE_HUE_COPPER (from core_items.py)
RESOURCE_HUE_COPPER = 0x096d

# RESOURCE_HUE_DEFAULT (from core_items.py)
RESOURCE_HUE_DEFAULT = 0x0000

# RESOURCE_HUE_DULL_COPPER (from core_items.py)
RESOURCE_HUE_DULL_COPPER = 0x0973

# RESOURCE_HUE_FROSTWOOD (from core_items.py)
RESOURCE_HUE_FROSTWOOD = 0x047f

# RESOURCE_HUE_GOLD (from core_items.py)
RESOURCE_HUE_GOLD = 0x08a5

# RESOURCE_HUE_HEARTWOOD (from core_items.py)
RESOURCE_HUE_HEARTWOOD = 0x04a9

# RESOURCE_HUE_HORNED (from core_items.py)
RESOURCE_HUE_HORNED = 0x0845

# RESOURCE_HUE_OAK (from core_items.py)
RESOURCE_HUE_OAK = 0x07da

# RESOURCE_HUE_SHADOW_IRON (from core_items.py)
RESOURCE_HUE_SHADOW_IRON = 0x0966

# RESOURCE_HUE_SPINED (from core_items.py)
RESOURCE_HUE_SPINED = 0x08ac

# RESOURCE_HUE_VALORITE (from core_items.py)
RESOURCE_HUE_VALORITE = 0x08ab

# RESOURCE_HUE_VERITE (from core_items.py)
RESOURCE_HUE_VERITE = 0x089f

# RESOURCE_HUE_YEW (from core_items.py)
RESOURCE_HUE_YEW = 0x04a8

# RUBY (from core_items.py)
RUBY = 0x0F13

# RestockItem (from core_crafting.py)
class RestockItem:
    def __init__(self, itemId, itemHue, resourceBoxSerial, resourceBoxButton, amount = 10000, resourceBoxPage = 1):
        self.itemId = itemId
        self.itemHue = itemHue
        self.resourceBoxSerial = resourceBoxSerial
        self.resourceBoxButton = resourceBoxButton
        self.amount = amount
        self.resourceBoxPage = resourceBoxPage
        
    def __str__(self):
        return f"RestockItem(itemId='{self.itemId}', itemHue={self.itemHue}, amount='{self.amount}', resourceBoxSerial='{self.resourceBoxSerial}', resourceBoxButton='{self.resourceBoxButton}', resourceBoxPage='{self.resourceBoxPage}')"        

# SAPPHIRE (from core_items.py)
SAPPHIRE = 0x0F11

# SPIDERSILK (from core_items.py)
SPIDERSILK = 0x0F8D

# STAR_SAPPHIRE (from core_items.py)
STAR_SAPPHIRE =  0x0F0F

# SULPHUROUSASH (from core_items.py)
SULPHUROUSASH = 0x0F8C

# TOURMALINE (from core_items.py)
TOURMALINE = 0x0F18

# TURQUOISE (from core_items.py)
TURQUOISE = 0x3193

# WHITE_PEARL (from core_items.py)
WHITE_PEARL = 0x3196

# get_amount_in_container (from core_crafting.py)
def get_amount_in_container(resource, containerSerial):
    amount = 0
    items = Items.FindAllByID(resource.itemId, resource.itemHue, containerSerial, 0)
    for item in items:
        amount = amount + item.Amount
    return amount

# run_restocker (from core_crafting.py)
def run_restocker(

    # Green commodity deed box. Can be any container that can hold weight though.
    commodityBoxSerial,
    
    # An array of RestockItem, the resources you want to stock. This is how you configure it.
    # Include only those resources you wish to stock, the hue, the amount, the  gump button id, and page.
    # Page is the page on the gump menu.
    resources,
    
    # (Optional) Time to wait between item moves. Adjust with caution. Reducing this will increase speed
    # of the script, but you risk disconnects and other issues maintaining state. Default is 1 second.
    itemMoveDelayMs = 1000,    
    
    # (Optional) Timeout between  gump button presses. Configure based on server latency.
    gumpDelayMs = 500
):
    RESOURCE_BOX_GUMP_ID = 0x23d0f169
    
    Items.UseItem(commodityBoxSerial)
    Misc.Pause(itemMoveDelayMs)
    
    for resource in resources:
        print(resource)
        
        if Gumps.HasGump(RESOURCE_BOX_GUMP_ID):
            Gumps.CloseGump(RESOURCE_BOX_GUMP_ID)
                
        amountInBox = get_amount_in_container(resource, commodityBoxSerial)
        if amountInBox >= resource.amount:
            continue
        
        Items.UseItem(resource.resourceBoxSerial)
        Gumps.WaitForGump(RESOURCE_BOX_GUMP_ID, 3000)
        Misc.Pause(gumpDelayMs)
        
        for page in range(1, resource.resourceBoxPage):
            Gumps.SendAction(RESOURCE_BOX_GUMP_ID, 2)
            Gumps.WaitForGump(RESOURCE_BOX_GUMP_ID, 3000)
            Misc.Pause(gumpDelayMs * 4)
            
        while True:
            amountInBox = get_amount_in_container(resource, commodityBoxSerial)
            if amountInBox >= resource.amount:
                break
            
            Gumps.SendAction(RESOURCE_BOX_GUMP_ID, resource.resourceBoxButton)
            Gumps.WaitForGump(RESOURCE_BOX_GUMP_ID, 3000)
            Misc.Pause(gumpDelayMs)

            runAgain = True if Items.FindByID(resource.itemId, resource.itemHue, Player.Backpack.Serial, 0) is not None else False
            for r in resources:
                items = Items.FindAllByID(r.itemId, r.itemHue, Player.Backpack.Serial, 0)
                for item in items:
                    Items.Move(item, commodityBoxSerial, item.Amount)
                    Misc.Pause(itemMoveDelayMs)

            if not runAgain:
                break

# ===============================================
# Main Script Code
# ===============================================
# Insane UO Specific. Transfer resources from resource box to a commodity box.
# Use this to prepare your box in conjunction with the BODBuilder.
# Automates resource transferring for use.
# See the configuration section below

# Main container that will house a bunch of resources.
# Works well with commodity deed box but can be any container.
commodityBoxSerial = 0x408CC21E

# Set these serials to your InsaneUO resource boxes.
minerResourceBoxSerial = 0x4003A151
reagentResourceBoxSerial = 0x408F3168
tailorResourceBoxSerial = 0x40E2C44B
logsAndBoardsResourceBoxSerial = 0x402A1002
mondainLegacyResourceBoxSerial = 0x4094F259

# Main configuration. Set the resources you want to stock here and their amounts.
# Restockable item that lives inside of a specialized resource container.
# Arguments are as follows:
# itemId: Refer to constants, but represents things like item ids for ingots, boards, etc.
# itemHue: Some items have the same id but use different hues (leather, ingots, boards)
# resourceBoxSerial: Inspect your resource box with razor, get the serial, plug it in
# resourceBoxButton: This is the button id of the gump. You can use gump inspector. Starts at 100 and increments up.
# amount: The number of items you want in your commodityDeedBox.
# resourceBoxPage: (Optional) The gump has multiple pages. Starts at 0. Most items are on page 0.
resources = [
    RestockItem(BLACKPEARL, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 100, 10000),
    RestockItem(BLOODMOSS, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 101, 10000),
    RestockItem(GARLIC, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 102, 10000),
    RestockItem(GINSENG, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 103, 10000),
    RestockItem(MANDRAKEROOT, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 104, 10000),
    RestockItem(NIGHTSHADE, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 105, 10000),
    RestockItem(SULPHUROUSASH, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 106, 10000),
    RestockItem(SPIDERSILK, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 107, 10000),
    RestockItem(BATWING, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 108, 10000),
    RestockItem(GRAVEDUST, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 109, 10000),
    RestockItem(DAEMONBLOOD, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 110, 10000),
    RestockItem(NOXCRYSTAL, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 111, 10000),
    RestockItem(PIGIRON, RESOURCE_HUE_DEFAULT, reagentResourceBoxSerial, 112, 10000),
    RestockItem(BOARD_STATIC_ID, RESOURCE_HUE_DEFAULT, logsAndBoardsResourceBoxSerial, 107, 10000),
    RestockItem(BOARD_STATIC_ID, RESOURCE_HUE_OAK, logsAndBoardsResourceBoxSerial, 108, 10000),
    RestockItem(BOARD_STATIC_ID, RESOURCE_HUE_ASH, logsAndBoardsResourceBoxSerial, 109, 10000),
    RestockItem(BOARD_STATIC_ID, RESOURCE_HUE_YEW, logsAndBoardsResourceBoxSerial, 110, 10000),
    RestockItem(BOARD_STATIC_ID, RESOURCE_HUE_HEARTWOOD, logsAndBoardsResourceBoxSerial, 111, 10000),
    RestockItem(BOARD_STATIC_ID, RESOURCE_HUE_BLOODWOOD, logsAndBoardsResourceBoxSerial, 112, 10000),
    RestockItem(BOARD_STATIC_ID, RESOURCE_HUE_FROSTWOOD, logsAndBoardsResourceBoxSerial, 113, 10000),
    RestockItem(INGOT_STATIC_ID, RESOURCE_HUE_DEFAULT, minerResourceBoxSerial, 101, 10000),
    RestockItem(INGOT_STATIC_ID, RESOURCE_HUE_DULL_COPPER, minerResourceBoxSerial, 101, 10000),
    RestockItem(INGOT_STATIC_ID, RESOURCE_HUE_SHADOW_IRON, minerResourceBoxSerial, 102, 10000),
    RestockItem(INGOT_STATIC_ID, RESOURCE_HUE_COPPER, minerResourceBoxSerial, 103, 10000),
    RestockItem(INGOT_STATIC_ID, RESOURCE_HUE_BRONZE, minerResourceBoxSerial, 104, 10000),
    RestockItem(INGOT_STATIC_ID, RESOURCE_HUE_GOLD, minerResourceBoxSerial, 105, 10000),
    RestockItem(INGOT_STATIC_ID, RESOURCE_HUE_AGAPITE, minerResourceBoxSerial, 106, 10000),
    RestockItem(INGOT_STATIC_ID, RESOURCE_HUE_VERITE, minerResourceBoxSerial, 107, 10000),
    RestockItem(INGOT_STATIC_ID, RESOURCE_HUE_VALORITE, minerResourceBoxSerial, 108, 10000),
    RestockItem(CLOTH_STATIC_ID, RESOURCE_HUE_DEFAULT, tailorResourceBoxSerial, 111, 10000),
    RestockItem(LEATHER_STATIC_ID, RESOURCE_HUE_DEFAULT, tailorResourceBoxSerial, 100, 10000),
    RestockItem(LEATHER_STATIC_ID, RESOURCE_HUE_SPINED, tailorResourceBoxSerial, 101, 10000),
    RestockItem(LEATHER_STATIC_ID, RESOURCE_HUE_HORNED, tailorResourceBoxSerial, 102, 10000),
    RestockItem(LEATHER_STATIC_ID, RESOURCE_HUE_BARBED, tailorResourceBoxSerial, 103, 10000),
    RestockItem(CITRINE, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 100, 1000),
    RestockItem(EMERALD, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 102, 1000),
    RestockItem(TOURMALINE, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 104, 1000),
    RestockItem(DIAMOND, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 106, 1000),
    RestockItem(SAPPHIRE, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 108, 1000),
    RestockItem(STAR_SAPPHIRE, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 109, 1000),
    RestockItem(RUBY, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 111, 1000),
    RestockItem(AMBER, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 113, 1000),
    RestockItem(AMETHYST, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 115, 1000),
    RestockItem(WHITE_PEARL, RESOURCE_HUE_DEFAULT, mondainLegacyResourceBoxSerial, 117, 100, 2),
]

# Stand near resource boxes and load everything from a resource box into a real container.
# This is useful for use in conjunction with the BODBuilder.
# InsaneUO specific.
run_restocker(

    # Green commodity deed box. Can be any container that can hold weight though.
    commodityBoxSerial = commodityBoxSerial,
    
    # An array of RestockItem, the resources you want to stock. This is how you configure it.
    # Include only those resources you wish to stock, the hue, the amount, the  gump button id, and page.
    # Page is the page on the gump menu.
    resources = resources,
    
    # Time to wait between item moves. Adjust with caution. Reducing this will increase speed
    # of the script, but you risk disconnects and other issues maintaining state
    itemMoveDelayMs = 1000, 
    
    # (Optional) Timeout between  gump button presses. Configure based on server latency.
    gumpDelayMs = 500
)
